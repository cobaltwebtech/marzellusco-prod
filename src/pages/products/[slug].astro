---
import FeaturedProducts from "@/components/FeaturedProducts.astro";
import config from "@/config/config.json";
import { AddToCart } from "@/functional-components/cart/AddToCart";
import ProductGallery from "@/functional-components/product/ProductGallery";
import ShowTags from "@/functional-components/product/ShowTags";
import Tabs from "@/functional-components/product/Tabs";
import { VariantSelector } from "@/functional-components/product/VariantSelector";
import Price from "@/functional-components/Price";
import SocialShare from "@/functional-components/SocialShare";
import PaymentTypes from "@/functional-components/PaymentTypes";
import Breadcrumbs from "@/components/Breadcrumbs.astro";
import Base from "@/layouts/Base.astro";
import { getProduct, getProductRecommendations } from "@/lib/shopify";
import type { CollectionEntry } from "astro:content";
import { getEntry } from "astro:content";

const { slug } = Astro.params;
const product = await getProduct(slug as string);

if (!product) {
  return Astro.redirect("/404");
}

const {
  id,
  title,
  description,
  descriptionHtml,
  priceRange,
  compareAtPriceRange,
  images,
  options,
  variants,
  tags,
} = product;

const relatedProducts = await getProductRecommendations(id);
const defaultVariantId = variants.length > 0 ? variants[0].id : undefined;
---

<Base>
  <Breadcrumbs className="container my-8" />

  {/* Product details section  */}
  <section class="md:section-sm">
    <div class="container">
      <div class="grid grid-cols-1 justify-center gap-8 md:grid-cols-2">
        {/* right side contents */}
        <div>
          <ProductGallery client:only="react" images={images} />
        </div>

        {/* left side contents */}
        <div class="py-6 md:ml-7 lg:py-0">
          <h1 class="mb-2 text-3xl font-bold md:mb-6">{title}</h1>

          <div class="flex items-center gap-2">
            <h4 class="text-light dark:text-darkmode-text text-2xl font-medium">
              <Price amount={priceRange?.minVariantPrice.amount} />
            </h4>
            {
              parseFloat(compareAtPriceRange?.maxVariantPrice.amount) > 0 ? (
                <s class="max-md:h3 text-light dark:text-darkmode-light">
                  <Price
                    amount={compareAtPriceRange?.maxVariantPrice?.amount}
                  />
                </s>
              ) : (
                ""
              )
            }
          </div>

          <div class="my-10 space-y-6 md:my-10 md:space-y-10">
            <div>
              {
                options && (
                  <VariantSelector
                    client:only="react"
                    options={options}
                    variants={variants}
                    images={images}
                  />
                )
              }
            </div>
          </div>

          <div class="mt-8 mb-6 flex gap-4 md:mt-10">
            <AddToCart
              client:only="react"
              variants={product?.variants}
              availableForSale={product?.availableForSale}
              stylesClass={"btn max-md:btn-sm btn-primary cursor-pointer"}
              handle={null}
              defaultVariantId={defaultVariantId}
            />
          </div>

          <div class="flex flex-wrap items-center gap-3">
            <PaymentTypes client:only="react" />
          </div>

          <hr class="border-border dark:border-light my-6 border" />

          <div class="mb-6 flex items-center gap-3">
            <h5 class="max-md:text-md">Share to socials:</h5>
            <SocialShare
              socialName={title}
              className="social-icons"
              pathname={Astro.url.pathname}
              client:only="react"
            />
          </div>

          {
            tags.length > 0 && (
              <div class="flex flex-wrap items-center gap-3">
                <h5 class="max-md:text-base">Tags:</h5>
                <ShowTags client:only="react" tags={tags} />
              </div>
            )
          }
        </div>
      </div>
    </div>
  </section>

  {/* Description of a product  */}
  {
    description && (
      <section>
        <div class="container">
          <div class="mx-auto mt-12">
            <Tabs client:only="react" descriptionHtml={descriptionHtml} />
          </div>
        </div>
      </section>
    )
  }

  {/* Recommended Products section  */}
  <section class="section">
    <div class="container">
      {
        relatedProducts?.length > 0 && (
          <>
            <div class="mb-6 text-center md:mb-14">
              <h2 class="mb-2 text-4xl font-bold">Related Products</h2>
            </div>
            <FeaturedProducts products={relatedProducts.slice(0, 4)} />
          </>
        )
      }
    </div>
  </section>
</Base>

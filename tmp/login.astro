---
import Base from "@/layouts/Base.astro";
import { BiLoaderAlt } from "react-icons/bi";
---

<Base title="Login">
  <section class="section">
    <div class="container">
      <div>
        <div class="col-11 mx-auto sm:col-9 md:col-7">
          <div class="mb-14 text-center">
            <h2 class="max-md:h1 md:mb-2">Login</h2>
            <p class="md:text-lg">
              Please fill your email and password to login
            </p>
          </div>

          <form id="loginForm">
            <div>
              <label class="form-label">Email Address</label>
              <input
                class="form-input"
                placeholder="Type your email"
                type="email"
                name="email"
                required
              />
            </div>

            <div>
              <label class="form-label mt-8">Password</label>
              <input
                class="form-input"
                placeholder="********"
                type="password"
                name="password"
                required
              />
            </div>

            <div id="errorMessages" class="mt-2"></div>

            <button
              type="submit"
              class="btn btn-primary mt-10 w-full md:text-lg md:font-medium"
            >
              <span id="buttonText">Log In</span>
              <BiLoaderAlt
                className="mx-auto hidden animate-spin"
                size={26}
                id="loader"
              />
            </button>
          </form>

          <div class="mt-4 flex gap-x-2 text-sm md:text-base">
            <p class="text-light dark:text-darkmode-light">
              Don't have an account?
            </p>
            <a
              class="text-dark dark:text-darkmode-dark font-medium underline"
              href="/sign-up"
            >
              Register
            </a>
          </div>
        </div>
      </div>
    </div>
  </section>

  <script>
    interface LoginResponse {
      token: string;
      customer: object;
    }

    interface ErrorResponse {
      errors: { code?: string; message: string }[];
    }

    const loginForm = document.getElementById("loginForm") as HTMLFormElement;
    const errorMessagesDiv = document.getElementById(
      "errorMessages",
    ) as HTMLDivElement;
    const buttonText = document.getElementById("buttonText") as HTMLSpanElement;
    const loader = document.getElementById("loader") as HTMLElement;

    loginForm?.addEventListener("submit", async (e: SubmitEvent) => {
      e.preventDefault();

      const formData = new FormData(loginForm);
      const email = formData.get("email") as string;
      const password = formData.get("password") as string;

      if (!email || !password) {
        errorMessagesDiv.innerHTML =
          '<p class="font-medium text-red-500">Email and password are required.</p>';
        return;
      }

      try {
        buttonText?.classList.add("hidden");
        loader?.classList.remove("hidden");

        const response = await fetch("/api/login", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ email, password }),
        });

        if (!response.ok) {
          const responseData: ErrorResponse = await response.json();
          const errors = responseData.errors || [];

          errorMessagesDiv.innerHTML = errors
            .map(
              (error) =>
                `<p class="font-medium text-red-500">
                  *${
                    error.code === "UNIDENTIFIED_CUSTOMER"
                      ? error.message
                      : "Invalid Email or Password"
                  }
                </p>`,
            )
            .join("");
          return;
        }

        const responseData: LoginResponse = await response.json();

        // Clear errors and save user data to localStorage
        errorMessagesDiv.innerHTML = "";
        localStorage.setItem("user", JSON.stringify(responseData));
        window.location.href = "/";
      } catch (error) {
        console.error("Error during login:", error);
        errorMessagesDiv.innerHTML =
          '<p class="font-medium text-red-500">An error occurred. Please try again.</p>';
      } finally {
        buttonText?.classList.remove("hidden");
        loader?.classList.add("hidden");
      }
    });
  </script>
</Base>
